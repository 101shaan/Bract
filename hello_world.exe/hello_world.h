// Generated by Bract Compiler
// https://github.com/bract-lang/bract

#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Bract_runtime.h"

// Forward declarations
typedef struct id_8 id_8;
typedef enum id_11 id_11;

extern const double id_1;
extern const double id_2;
struct id_8 {
    double id_9;
    double id_10;
};

typedef enum id_11_Tag {
    id_11_id_12,
    id_11_id_13,
    id_11_id_14,
    id_11_id_15
} id_11_Tag;

typedef struct id_11 {
    id_11_Tag tag;
    union {
        struct {
            uint8_t field_0;
            uint8_t field_1;
            uint8_t field_2;
        } id_15;
    } data;
} id_11;

// Methods for id_8
struct id_8 id_8_id_16(double id_9, double id_10) {
    return (id_8) { .id_9 = id_9, .id_10 = id_10 };
}

double id_8_id_17(struct id_19* id_18, struct id_8* id_20) {
    int32_t Bract_symbol_21 = (id_18.id_9 - id_20.id_9);
    int32_t Bract_symbol_22 = (id_18.id_10 - id_20.id_10);
    return UnknownType_id_23(&(((id_21 * id_21) + (id_22 * id_22))));
}


