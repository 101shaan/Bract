{"$message_type":"diagnostic","message":"unused imports: `BinaryOp`, `EnumVariant`, `FieldInit`, `GenericParam`, `ImplItem`, `Literal`, `MatchArm`, `Pattern`, `PrimitiveType`, `StructField`, `StructFields`, `Type`, and `UnaryOp`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\parser.rs","byte_start":168,"byte_end":175,"line_start":4,"line_end":4,"column_start":44,"column_end":51,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":44,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":177,"byte_end":181,"line_start":4,"line_end":4,"column_start":53,"column_end":57,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":53,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":228,"byte_end":236,"line_start":4,"line_end":4,"column_start":104,"column_end":112,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":104,"highlight_end":112}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":238,"byte_end":245,"line_start":4,"line_end":4,"column_start":114,"column_end":121,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":114,"highlight_end":121}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":247,"byte_end":254,"line_start":4,"line_end":4,"column_start":123,"column_end":130,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":123,"highlight_end":130}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":256,"byte_end":265,"line_start":4,"line_end":4,"column_start":132,"column_end":141,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":132,"highlight_end":141}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":267,"byte_end":275,"line_start":4,"line_end":4,"column_start":143,"column_end":151,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":143,"highlight_end":151}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":277,"byte_end":289,"line_start":4,"line_end":4,"column_start":153,"column_end":165,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":153,"highlight_end":165}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":291,"byte_end":302,"line_start":4,"line_end":4,"column_start":167,"column_end":178,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":167,"highlight_end":178}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":304,"byte_end":315,"line_start":4,"line_end":4,"column_start":180,"column_end":191,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":180,"highlight_end":191}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":317,"byte_end":325,"line_start":4,"line_end":4,"column_start":193,"column_end":201,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":193,"highlight_end":201}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":327,"byte_end":339,"line_start":4,"line_end":4,"column_start":203,"column_end":215,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":203,"highlight_end":215}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":341,"byte_end":354,"line_start":4,"line_end":4,"column_start":217,"column_end":230,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":217,"highlight_end":230}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\parser\\parser.rs","byte_start":166,"byte_end":181,"line_start":4,"line_end":4,"column_start":42,"column_end":57,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":42,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\parser\\parser.rs","byte_start":226,"byte_end":354,"line_start":4,"line_end":4,"column_start":102,"column_end":230,"is_primary":true,"text":[{"text":"use crate::ast::{Module, Item, Expr, Stmt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};","highlight_start":102,"highlight_end":230}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `BinaryOp`, `EnumVariant`, `FieldInit`, `GenericParam`, `ImplItem`, `Literal`, `MatchArm`, `Pattern`, `PrimitiveType`, `StructField`, `StructFields`, `Type`, and `UnaryOp`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\parser.rs:4:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mt, Pattern, Type, Span, Visibility, Parameter, InternedString, BinaryOp, UnaryOp, Literal, FieldInit, MatchArm, StructFields, StructField, EnumVariant, ImplItem, GenericParam, PrimitiveType};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `FieldInit`, `InternedString`, `MatchArm`, `Pattern`, `Stmt`, and `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\expressions.rs","byte_start":114,"byte_end":118,"line_start":4,"line_end":4,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":120,"byte_end":124,"line_start":4,"line_end":4,"column_start":30,"column_end":34,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":30,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":160,"byte_end":174,"line_start":4,"line_end":4,"column_start":70,"column_end":84,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":70,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":176,"byte_end":185,"line_start":4,"line_end":4,"column_start":86,"column_end":95,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":86,"highlight_end":95}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":187,"byte_end":195,"line_start":4,"line_end":4,"column_start":97,"column_end":105,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":97,"highlight_end":105}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":197,"byte_end":204,"line_start":4,"line_end":4,"column_start":107,"column_end":114,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":107,"highlight_end":114}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\parser\\expressions.rs","byte_start":112,"byte_end":124,"line_start":4,"line_end":4,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":22,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\parser\\expressions.rs","byte_start":158,"byte_end":204,"line_start":4,"line_end":4,"column_start":68,"column_end":114,"is_primary":true,"text":[{"text":"use crate::ast::{Expr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};","highlight_start":68,"highlight_end":114}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `FieldInit`, `InternedString`, `MatchArm`, `Pattern`, `Stmt`, and `Type`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\expressions.rs:4:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mr, Stmt, Type, Span, BinaryOp, UnaryOp, Literal, InternedString, FieldInit, MatchArm, Pattern};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Expr`, `InternedString`, `Pattern`, and `Type`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\statements.rs","byte_start":435,"byte_end":439,"line_start":12,"line_end":12,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\statements.rs","byte_start":441,"byte_end":448,"line_start":12,"line_end":12,"column_start":30,"column_end":37,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":30,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\statements.rs","byte_start":450,"byte_end":454,"line_start":12,"line_end":12,"column_start":39,"column_end":43,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":39,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\statements.rs","byte_start":472,"byte_end":486,"line_start":12,"line_end":12,"column_start":61,"column_end":75,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":61,"highlight_end":75}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\parser\\statements.rs","byte_start":433,"byte_end":454,"line_start":12,"line_end":12,"column_start":22,"column_end":43,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":22,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\parser\\statements.rs","byte_start":470,"byte_end":486,"line_start":12,"line_end":12,"column_start":59,"column_end":75,"is_primary":true,"text":[{"text":"use crate::ast::{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};","highlight_start":59,"highlight_end":75}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Expr`, `InternedString`, `Pattern`, and `Type`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\statements.rs:12:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m:{Stmt, Expr, Pattern, Type, Span, BinaryOp, InternedString, MatchArm};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `Expr` and `InternedString`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\types.rs","byte_start":555,"byte_end":559,"line_start":16,"line_end":16,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"use crate::ast::{Type, Expr, Span, PrimitiveType, InternedString};","highlight_start":24,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\parser\\types.rs","byte_start":582,"byte_end":596,"line_start":16,"line_end":16,"column_start":51,"column_end":65,"is_primary":true,"text":[{"text":"use crate::ast::{Type, Expr, Span, PrimitiveType, InternedString};","highlight_start":51,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src\\parser\\types.rs","byte_start":553,"byte_end":559,"line_start":16,"line_end":16,"column_start":22,"column_end":28,"is_primary":true,"text":[{"text":"use crate::ast::{Type, Expr, Span, PrimitiveType, InternedString};","highlight_start":22,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\parser\\types.rs","byte_start":580,"byte_end":596,"line_start":16,"line_end":16,"column_start":49,"column_end":65,"is_primary":true,"text":[{"text":"use crate::ast::{Type, Expr, Span, PrimitiveType, InternedString};","highlight_start":49,"highlight_end":65}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Expr` and `InternedString`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\types.rs:16:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ast::{Type, Expr, Span, PrimitiveType, InternedString};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `SemanticAnalyzer`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\mod.rs","byte_start":561,"byte_end":577,"line_start":13,"line_end":13,"column_start":23,"column_end":39,"is_primary":true,"text":[{"text":"use crate::semantic::{SemanticAnalyzer, SymbolTable};","highlight_start":23,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\mod.rs","byte_start":561,"byte_end":579,"line_start":13,"line_end":13,"column_start":23,"column_end":41,"is_primary":true,"text":[{"text":"use crate::semantic::{SemanticAnalyzer, SymbolTable};","highlight_start":23,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\codegen\\mod.rs","byte_start":560,"byte_end":561,"line_start":13,"line_end":13,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"use crate::semantic::{SemanticAnalyzer, SymbolTable};","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\codegen\\mod.rs","byte_start":590,"byte_end":591,"line_start":13,"line_end":13,"column_start":52,"column_end":53,"is_primary":true,"text":[{"text":"use crate::semantic::{SemanticAnalyzer, SymbolTable};","highlight_start":52,"highlight_end":53}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `SemanticAnalyzer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\mod.rs:13:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::semantic::{SemanticAnalyzer, SymbolTable};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt::Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":307,"byte_end":322,"line_start":8,"line_end":8,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::fmt::Write;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":303,"byte_end":325,"line_start":8,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::fmt::Write;","highlight_start":1,"highlight_end":21},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::fmt::Write`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt::Write;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `crate::semantic::SymbolTable`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":193,"byte_end":221,"line_start":7,"line_end":7,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use crate::semantic::SymbolTable;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":189,"byte_end":224,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::semantic::SymbolTable;","highlight_start":1,"highlight_end":34},{"text":"use super::{CodegenContext, CodegenResult, CodegenError, CCodeBuilder, CodegenMetrics};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::semantic::SymbolTable`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\items.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::semantic::SymbolTable;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::collections::HashMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":317,"byte_end":342,"line_start":9,"line_end":9,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":313,"byte_end":345,"line_start":9,"line_end":10,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::collections::HashMap;","highlight_start":1,"highlight_end":31},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::collections::HashMap`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\items.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::collections::HashMap;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\build.rs","byte_start":363,"byte_end":371,"line_start":10,"line_end":10,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\build.rs","byte_start":359,"byte_end":374,"line_start":10,"line_end":11,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\build.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::fmt::Write`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\mod.rs","byte_start":630,"byte_end":645,"line_start":15,"line_end":15,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::fmt::Write;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::fmt::Write`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\mod.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::fmt::Write;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `start_pos`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\lexer\\lexer.rs","byte_start":7137,"byte_end":7146,"line_start":198,"line_end":198,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let start_pos = self.position;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\lexer\\lexer.rs","byte_start":7137,"byte_end":7146,"line_start":198,"line_end":198,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"        let start_pos = self.position;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_start_pos","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `start_pos`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lexer\\lexer.rs:198:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let start_pos = self.position;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_start_pos`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `has_exponent` is assigned to, but never used","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\lexer\\lexer.rs","byte_start":15241,"byte_end":15253,"line_start":438,"line_end":438,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"        let mut has_exponent = false;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `_has_exponent` instead","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `has_exponent` is assigned to, but never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lexer\\lexer.rs:438:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m438\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut has_exponent = false;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: consider using `_has_exponent` instead\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"value assigned to `has_exponent` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\lexer\\lexer.rs","byte_start":20983,"byte_end":20995,"line_start":580,"line_end":580,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"                has_exponent = true;","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `has_exponent` is never read\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lexer\\lexer.rs:580:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m580\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                has_exponent = true;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\semantic\\analyzer.rs","byte_start":6716,"byte_end":6736,"line_start":221,"line_end":221,"column_start":21,"column_end":41,"is_primary":true,"text":[{"text":"                let mut expression_types = HashMap::new();","highlight_start":21,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\semantic\\analyzer.rs","byte_start":6716,"byte_end":6720,"line_start":221,"line_end":221,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"                let mut expression_types = HashMap::new();","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\semantic\\analyzer.rs:221:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let mut expression_types = HashMap::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `context`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\parser.rs","byte_start":3464,"byte_end":3471,"line_start":106,"line_end":106,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn expect(&mut self, expected: TokenType, context: &str) -> ParseResult<Token> {","highlight_start":51,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\parser\\parser.rs","byte_start":3464,"byte_end":3471,"line_start":106,"line_end":106,"column_start":51,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn expect(&mut self, expected: TokenType, context: &str) -> ParseResult<Token> {","highlight_start":51,"highlight_end":58}],"label":null,"suggested_replacement":"_context","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `context`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\parser.rs:106:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m, expected: TokenType, context: &str) -> ParseResult<Token> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_context`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\parser\\expressions.rs","byte_start":6602,"byte_end":6610,"line_start":183,"line_end":183,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut expr = self.parse_additive_expression()?;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\parser\\expressions.rs","byte_start":6602,"byte_end":6606,"line_start":183,"line_end":183,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut expr = self.parse_additive_expression()?;","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\parser\\expressions.rs:183:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut expr = self.parse_additive_expression()?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\visitor.rs","byte_start":23144,"byte_end":23155,"line_start":565,"line_end":565,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let mut counter = NodeCounter::new();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\visitor.rs","byte_start":23144,"byte_end":23148,"line_start":565,"line_end":565,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut counter = NodeCounter::new();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\visitor.rs:565:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m565\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut counter = NodeCounter::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\visitor.rs","byte_start":23595,"byte_end":23608,"line_start":577,"line_end":577,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"        let mut extractor = IdentifierExtractor::new();","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\visitor.rs","byte_start":23595,"byte_end":23599,"line_start":577,"line_end":577,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut extractor = IdentifierExtractor::new();","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\visitor.rs:577:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m577\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut extractor = IdentifierExtractor::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\c_gen.rs","byte_start":2695,"byte_end":2699,"line_start":79,"line_end":79,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"                Item::Function { name, .. } => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try removing the field","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\c_gen.rs","byte_start":2695,"byte_end":2700,"line_start":79,"line_end":79,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"                Item::Function { name, .. } => {","highlight_start":34,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\c_gen.rs:79:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Item::Function { name, .. } => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: try removing the field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `stmt`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\c_gen.rs","byte_start":15545,"byte_end":15549,"line_start":396,"line_end":396,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"    fn generate_statement(&mut self, stmt: &Stmt, builder: &mut CCodeBuilder) -> CodegenResult<()> {","highlight_start":38,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\c_gen.rs","byte_start":15545,"byte_end":15549,"line_start":396,"line_end":396,"column_start":38,"column_end":42,"is_primary":true,"text":[{"text":"    fn generate_statement(&mut self, stmt: &Stmt, builder: &mut CCodeBuilder) -> CodegenResult<()> {","highlight_start":38,"highlight_end":42}],"label":null,"suggested_replacement":"_stmt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `stmt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\c_gen.rs:396:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m396\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mate_statement(&mut self, stmt: &Stmt, builder: &mut CCodeBuilder) -\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_stmt`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `raw`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":6316,"byte_end":6319,"line_start":155,"line_end":155,"column_start":38,"column_end":41,"is_primary":true,"text":[{"text":"            Literal::String { value, raw, raw_delimiter } => {","highlight_start":38,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try ignoring the field","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":6316,"byte_end":6319,"line_start":155,"line_end":155,"column_start":38,"column_end":41,"is_primary":true,"text":[{"text":"            Literal::String { value, raw, raw_delimiter } => {","highlight_start":38,"highlight_end":41}],"label":null,"suggested_replacement":"raw: _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `raw`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:155:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Literal::String { value, raw, raw_delimiter } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: try ignoring the field: `raw: _`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `raw_delimiter`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":6321,"byte_end":6334,"line_start":155,"line_end":155,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"            Literal::String { value, raw, raw_delimiter } => {","highlight_start":43,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try ignoring the field","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":6321,"byte_end":6334,"line_start":155,"line_end":155,"column_start":43,"column_end":56,"is_primary":true,"text":[{"text":"            Literal::String { value, raw, raw_delimiter } => {","highlight_start":43,"highlight_end":56}],"label":null,"suggested_replacement":"raw_delimiter: _","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `raw_delimiter`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:155:43\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Literal::String { value, raw, raw_delimiter } => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: try ignoring the field: `raw_delimiter: _`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `temp_var`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":13738,"byte_end":13746,"line_start":343,"line_end":343,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let temp_var = self.context.temp_var();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":13738,"byte_end":13746,"line_start":343,"line_end":343,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let temp_var = self.context.temp_var();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"_temp_var","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `temp_var`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:343:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m343\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let temp_var = self.context.temp_var();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_temp_var`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `stmt`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":13880,"byte_end":13884,"line_start":348,"line_end":348,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        for stmt in statements {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":13880,"byte_end":13884,"line_start":348,"line_end":348,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        for stmt in statements {","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"_stmt","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `stmt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:348:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for stmt in statements {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_stmt`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `label`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":16703,"byte_end":16708,"line_start":426,"line_end":426,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"    fn generate_break(&mut self, label: &Option<InternedString>, value: Option<&Expr>) -> CodegenResult<String> {","highlight_start":34,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":16703,"byte_end":16708,"line_start":426,"line_end":426,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"    fn generate_break(&mut self, label: &Option<InternedString>, value: Option<&Expr>) -> CodegenResult<String> {","highlight_start":34,"highlight_end":39}],"label":null,"suggested_replacement":"_label","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `label`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:426:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m426\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0menerate_break(&mut self, label: &Option<InternedString>, value: Opt\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_label`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot borrow `*self` as mutable because it is also borrowed as immutable","code":{"code":"E0502","explanation":"A variable already borrowed with a certain mutability (either mutable or\nimmutable) was borrowed again with a different mutability.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let y = &a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it with a different mutability:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let y = &a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on Rust's ownership system, take a look at the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n"},"level":"error","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":16923,"byte_end":16954,"line_start":429,"line_end":429,"column_start":34,"column_end":65,"is_primary":true,"text":[{"text":"                let value_code = self.generate_expression(value)?;","highlight_start":34,"highlight_end":65}],"label":"mutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\codegen\\expressions.rs","byte_start":16817,"byte_end":16829,"line_start":427,"line_end":427,"column_start":33,"column_end":45,"is_primary":false,"text":[{"text":"        if let Some(loop_ctx) = self.context.current_loop() {","highlight_start":33,"highlight_end":45}],"label":"immutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\codegen\\expressions.rs","byte_start":17033,"byte_end":17053,"line_start":430,"line_end":430,"column_start":76,"column_end":96,"is_primary":false,"text":[{"text":"                Ok(format!(\"{{ break_value = {}; goto {}; }}\", value_code, loop_ctx.break_label))","highlight_start":76,"highlight_end":96}],"label":"immutable borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\shaan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\macros.rs","byte_start":3921,"byte_end":3961,"line_start":108,"line_end":108,"column_start":33,"column_end":73,"is_primary":false,"text":[{"text":"            $crate::fmt::format($crate::__export::format_args!($($arg)*))","highlight_start":33,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\codegen\\expressions.rs","byte_start":16977,"byte_end":17054,"line_start":430,"line_end":430,"column_start":20,"column_end":97,"is_primary":false,"text":[{"text":"                Ok(format!(\"{{ break_value = {}; goto {}; }}\", value_code, loop_ctx.break_label))","highlight_start":20,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"format!","def_site_span":{"file_name":"C:\\Users\\shaan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\macros.rs","byte_start":3807,"byte_end":3826,"line_start":105,"line_end":105,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! format {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__export::format_args!","def_site_span":{"file_name":"C:\\Users\\shaan\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":34889,"byte_end":34913,"line_start":1004,"line_end":1004,"column_start":5,"column_end":29,"is_primary":false,"text":[{"text":"    macro_rules! format_args {","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0502]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `*self` as mutable because it is also borrowed as immutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:429:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m = self.context.current_loop() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimmutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m428\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m) = value {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m429\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0me = self.generate_expression(value)?;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m430\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m{ break_value = {}; goto {}; }}\", value_code, loop_ctx.break_label))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimmutable borrow later used here\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `label`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":17354,"byte_end":17359,"line_start":440,"line_end":440,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"    fn generate_continue(&mut self, label: &Option<InternedString>) -> CodegenResult<String> {","highlight_start":37,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\expressions.rs","byte_start":17354,"byte_end":17359,"line_start":440,"line_end":440,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"    fn generate_continue(&mut self, label: &Option<InternedString>) -> CodegenResult<String> {","highlight_start":37,"highlight_end":42}],"label":null,"suggested_replacement":"_label","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `label`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\expressions.rs:440:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m440\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mrate_continue(&mut self, label: &Option<InternedString>) -> Codegen\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_label`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `item`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":2811,"byte_end":2815,"line_start":65,"line_end":65,"column_start":26,"column_end":30,"is_primary":true,"text":[{"text":"            Stmt::Item { item, .. } => {","highlight_start":26,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try removing the field","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":2811,"byte_end":2816,"line_start":65,"line_end":65,"column_start":26,"column_end":31,"is_primary":true,"text":[{"text":"            Stmt::Item { item, .. } => {","highlight_start":26,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `item`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:65:26\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Stmt::Item { item, .. } => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: try removing the field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `type_annotation`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":16208,"byte_end":16223,"line_start":458,"line_end":458,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        type_annotation: &Option<Type>,","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":16208,"byte_end":16223,"line_start":458,"line_end":458,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        type_annotation: &Option<Type>,","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"_type_annotation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `type_annotation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:458:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m458\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type_annotation: &Option<Type>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_type_annotation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `is_mutable`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":16286,"byte_end":16296,"line_start":460,"line_end":460,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        is_mutable: bool,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":16286,"byte_end":16296,"line_start":460,"line_end":460,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        is_mutable: bool,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_is_mutable","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `is_mutable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:460:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m460\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        is_mutable: bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_is_mutable`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `path`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17498,"byte_end":17502,"line_start":491,"line_end":491,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        path: &[InternedString],","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17498,"byte_end":17502,"line_start":491,"line_end":491,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        path: &[InternedString],","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"_path","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `path`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:491:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m491\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        path: &[InternedString],\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_path`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `type_annotation`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17566,"byte_end":17581,"line_start":493,"line_end":493,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        type_annotation: &Option<Type>,","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17566,"byte_end":17581,"line_start":493,"line_end":493,"column_start":9,"column_end":24,"is_primary":true,"text":[{"text":"        type_annotation: &Option<Type>,","highlight_start":9,"highlight_end":24}],"label":null,"suggested_replacement":"_type_annotation","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `type_annotation`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:493:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m493\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type_annotation: &Option<Type>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_type_annotation`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `is_mutable`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17644,"byte_end":17654,"line_start":495,"line_end":495,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        is_mutable: bool,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":17644,"byte_end":17654,"line_start":495,"line_end":495,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"        is_mutable: bool,","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"_is_mutable","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `is_mutable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:495:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m495\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        is_mutable: bool,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_is_mutable`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `expr_var`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":19188,"byte_end":19196,"line_start":530,"line_end":530,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    fn generate_pattern_match(&mut self, pattern: &Pattern, expr_var: &str) -> CodegenResult<String> {","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\statements.rs","byte_start":19188,"byte_end":19196,"line_start":530,"line_end":530,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    fn generate_pattern_match(&mut self, pattern: &Pattern, expr_var: &str) -> CodegenResult<String> {","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":"_expr_var","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `expr_var`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\statements.rs:530:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mlf, pattern: &Pattern, expr_var: &str) -> CodegenResult<String> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_expr_var`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":2139,"byte_end":2143,"line_start":65,"line_end":65,"column_start":34,"column_end":38,"is_primary":true,"text":[{"text":"                Item::Function { name, .. } => {","highlight_start":34,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try removing the field","code":null,"level":"help","spans":[{"file_name":"src\\codegen\\items.rs","byte_start":2139,"byte_end":2144,"line_start":65,"line_end":65,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"                Item::Function { name, .. } => {","highlight_start":34,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\codegen\\items.rs:65:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m65\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                Item::Function { name, .. } => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: try removing the field\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 34 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 1 previous error; 34 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0502`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0502`.\u001b[0m\n"}
