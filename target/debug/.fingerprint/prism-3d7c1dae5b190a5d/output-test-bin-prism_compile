{"$message_type":"diagnostic","message":"cannot find value `EXAMPLE_PRISM_CODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11474,"byte_end":11976,"line_start":344,"line_end":369,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":1,"highlight_end":38},{"text":"// Example Prism program demonstrating the compiler","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn main() -> i32 {","highlight_start":1,"highlight_end":19},{"text":"    let message = \"Hello, Prism!\";","highlight_start":1,"highlight_end":35},{"text":"    print_string(message);","highlight_start":1,"highlight_end":27},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    let x = 42;","highlight_start":1,"highlight_end":16},{"text":"    let y = calculate_square(x);","highlight_start":1,"highlight_end":33},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    print_int(y);","highlight_start":1,"highlight_end":18},{"text":"    return 0;","highlight_start":1,"highlight_end":14},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn calculate_square(n: i32) -> i32 {","highlight_start":1,"highlight_end":37},{"text":"    return n * n;","highlight_start":1,"highlight_end":18},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_string(s: str) {","highlight_start":1,"highlight_end":26},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_int(n: i32) {","highlight_start":1,"highlight_end":23},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"#;","highlight_start":1,"highlight_end":4}],"label":"similarly named constant `_EXAMPLE_PRISM_CODE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\bin\\prism_compile.rs","byte_start":12534,"byte_end":12552,"line_start":391,"line_end":391,"column_start":18,"column_end":36,"is_primary":true,"text":[{"text":"        assert!(!EXAMPLE_PRISM_CODE.is_empty());","highlight_start":18,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`","code":null,"level":"help","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11480,"byte_end":11499,"line_start":344,"line_end":344,"column_start":7,"column_end":26,"is_primary":true,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":7,"highlight_end":26}],"label":null,"suggested_replacement":"EXAMPLE_PRISM_CODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `EXAMPLE_PRISM_CODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bin\\prism_compile.rs:391:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst _EXAMPLE_PRISM_CODE: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// Example Prism program demonstrating the compiler\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named constant `_EXAMPLE_PRISM_CODE` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m391\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        assert!(!EXAMPLE_PRISM_CODE.is_empty());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;9m_EXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;10mEXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `EXAMPLE_PRISM_CODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11474,"byte_end":11976,"line_start":344,"line_end":369,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":1,"highlight_end":38},{"text":"// Example Prism program demonstrating the compiler","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn main() -> i32 {","highlight_start":1,"highlight_end":19},{"text":"    let message = \"Hello, Prism!\";","highlight_start":1,"highlight_end":35},{"text":"    print_string(message);","highlight_start":1,"highlight_end":27},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    let x = 42;","highlight_start":1,"highlight_end":16},{"text":"    let y = calculate_square(x);","highlight_start":1,"highlight_end":33},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    print_int(y);","highlight_start":1,"highlight_end":18},{"text":"    return 0;","highlight_start":1,"highlight_end":14},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn calculate_square(n: i32) -> i32 {","highlight_start":1,"highlight_end":37},{"text":"    return n * n;","highlight_start":1,"highlight_end":18},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_string(s: str) {","highlight_start":1,"highlight_end":26},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_int(n: i32) {","highlight_start":1,"highlight_end":23},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"#;","highlight_start":1,"highlight_end":4}],"label":"similarly named constant `_EXAMPLE_PRISM_CODE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\bin\\prism_compile.rs","byte_start":12583,"byte_end":12601,"line_start":392,"line_end":392,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        assert!(EXAMPLE_PRISM_CODE.contains(\"fn main()\"));","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`","code":null,"level":"help","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11480,"byte_end":11499,"line_start":344,"line_end":344,"column_start":7,"column_end":26,"is_primary":true,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":7,"highlight_end":26}],"label":null,"suggested_replacement":"EXAMPLE_PRISM_CODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `EXAMPLE_PRISM_CODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bin\\prism_compile.rs:392:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst _EXAMPLE_PRISM_CODE: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// Example Prism program demonstrating the compiler\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named constant `_EXAMPLE_PRISM_CODE` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m392\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        assert!(EXAMPLE_PRISM_CODE.contains(\"fn main()\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;9m_EXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;10mEXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `EXAMPLE_PRISM_CODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11474,"byte_end":11976,"line_start":344,"line_end":369,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":1,"highlight_end":38},{"text":"// Example Prism program demonstrating the compiler","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn main() -> i32 {","highlight_start":1,"highlight_end":19},{"text":"    let message = \"Hello, Prism!\";","highlight_start":1,"highlight_end":35},{"text":"    print_string(message);","highlight_start":1,"highlight_end":27},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    let x = 42;","highlight_start":1,"highlight_end":16},{"text":"    let y = calculate_square(x);","highlight_start":1,"highlight_end":33},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    print_int(y);","highlight_start":1,"highlight_end":18},{"text":"    return 0;","highlight_start":1,"highlight_end":14},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn calculate_square(n: i32) -> i32 {","highlight_start":1,"highlight_end":37},{"text":"    return n * n;","highlight_start":1,"highlight_end":18},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_string(s: str) {","highlight_start":1,"highlight_end":26},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_int(n: i32) {","highlight_start":1,"highlight_end":23},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"#;","highlight_start":1,"highlight_end":4}],"label":"similarly named constant `_EXAMPLE_PRISM_CODE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\bin\\prism_compile.rs","byte_start":12643,"byte_end":12661,"line_start":393,"line_end":393,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"        assert!(EXAMPLE_PRISM_CODE.contains(\"return\"));","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`","code":null,"level":"help","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11480,"byte_end":11499,"line_start":344,"line_end":344,"column_start":7,"column_end":26,"is_primary":true,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":7,"highlight_end":26}],"label":null,"suggested_replacement":"EXAMPLE_PRISM_CODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `EXAMPLE_PRISM_CODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bin\\prism_compile.rs:393:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst _EXAMPLE_PRISM_CODE: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// Example Prism program demonstrating the compiler\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named constant `_EXAMPLE_PRISM_CODE` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m393\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        assert!(EXAMPLE_PRISM_CODE.contains(\"return\"));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;9m_EXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;10mEXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cannot find value `EXAMPLE_PRISM_CODE` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11474,"byte_end":11976,"line_start":344,"line_end":369,"column_start":1,"column_end":4,"is_primary":false,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":1,"highlight_end":38},{"text":"// Example Prism program demonstrating the compiler","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn main() -> i32 {","highlight_start":1,"highlight_end":19},{"text":"    let message = \"Hello, Prism!\";","highlight_start":1,"highlight_end":35},{"text":"    print_string(message);","highlight_start":1,"highlight_end":27},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    let x = 42;","highlight_start":1,"highlight_end":16},{"text":"    let y = calculate_square(x);","highlight_start":1,"highlight_end":33},{"text":"    ","highlight_start":1,"highlight_end":5},{"text":"    print_int(y);","highlight_start":1,"highlight_end":18},{"text":"    return 0;","highlight_start":1,"highlight_end":14},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn calculate_square(n: i32) -> i32 {","highlight_start":1,"highlight_end":37},{"text":"    return n * n;","highlight_start":1,"highlight_end":18},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_string(s: str) {","highlight_start":1,"highlight_end":26},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"fn print_int(n: i32) {","highlight_start":1,"highlight_end":23},{"text":"    // This would be implemented in the runtime","highlight_start":1,"highlight_end":48},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"\"#;","highlight_start":1,"highlight_end":4}],"label":"similarly named constant `_EXAMPLE_PRISM_CODE` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\bin\\prism_compile.rs","byte_start":12979,"byte_end":12997,"line_start":403,"line_end":403,"column_start":30,"column_end":48,"is_primary":true,"text":[{"text":"        writeln!(file, \"{}\", EXAMPLE_PRISM_CODE).unwrap();","highlight_start":30,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`","code":null,"level":"help","spans":[{"file_name":"src\\bin\\prism_compile.rs","byte_start":11480,"byte_end":11499,"line_start":344,"line_end":344,"column_start":7,"column_end":26,"is_primary":true,"text":[{"text":"const _EXAMPLE_PRISM_CODE: &str = r#\"","highlight_start":7,"highlight_end":26}],"label":null,"suggested_replacement":"EXAMPLE_PRISM_CODE","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `EXAMPLE_PRISM_CODE` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\bin\\prism_compile.rs:403:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst _EXAMPLE_PRISM_CODE: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m// Example Prism program demonstrating the compiler\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m346\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m347\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() -> i32 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m369\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named constant `_EXAMPLE_PRISM_CODE` defined here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        writeln!(file, \"{}\", EXAMPLE_PRISM_CODE).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the leading underscore in `_EXAMPLE_PRISM_CODE` marks it as unused, consider renaming it to `EXAMPLE_PRISM_CODE`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;9m_EXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m344\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mconst \u001b[0m\u001b[0m\u001b[38;5;10mEXAMPLE_PRISM_CODE\u001b[0m\u001b[0m: &str = r#\"\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 4 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}
