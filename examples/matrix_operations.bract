// Matrix operations - stress test for memory management and loops
@performance(max_cycles = 50000000)
@memory(strategy = "linear")
fn matrix_multiply() -> i32 {
    // 8x8 matrix operations
    let mut sum: i32 = 0;
    
    // Simulate matrix multiplication
    let i: i32 = 0;
    while i < 8 {
        let j: i32 = 0;
        while j < 8 {
            let k: i32 = 0;
            while k < 8 {
                sum = sum + (i * j * k);
                k = k + 1;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    
    sum
}

fn main() -> i32 {
    matrix_multiply()
}